#################################################
# TP0 Code.py
#
# Your name: Yi Sijun Cathy
# Your andrew id: sijuncay
#################################################



import cs112_f20_week7_linter
import math, copy, random

from cmu_112_graphics import *

# “Life moves pretty fast. If you don’t stop and look around 
#  once in a while, you could miss it.”
#                                             Ferris Bueller

#citation: from 112 course notes 
#https://www.cs.cmu.edu/~112/notes/notes-graphics.html
#creates custom colors
def rgbString(r, g, b):
    return f'#{r:02x}{g:02x}{b:02x}'

def appStarted(app):
    app.mode = 'week'

def keyPressed(app, event):
    if event.key == 'w':
        app.mode = 'week'
    elif event.key == 'm':
        app.mode = 'month'
    elif event.key == 'y':
        app.mode = 'year'


#cited from email from Prof Kosbie about making a button


def mousePressed(app, event):
    cx, cy = app.width/2, app.height/2
    if ((cx-100 <= event.x <= cx+100) and
        (cy+100 <= event.y <= cy+120)):
        app.mode = 'month'

def redrawAll(app, canvas):
    if app.mode == 'week':
        textColor = 'white'
        bgColor = rgbString(350, 300, 600)
        canvas.create_rectangle(0,0,app.width,app.height, fill = bgColor)
        cx1, cy1, r1 = app.width/2, app.height - 5, (app.height - 380) 
        cx2, cy2, r2 = app.width/2, app.height - 5, (app.height - 650) 
        
        #canvas.create_oval(cx1-r1, cy1-r1, cx1+r1, cy1+r1, fill='white')
        #draw 7 arcs for 7 days of the week
        for n in range(7): #note: extent = (n+1) * (180/7)
                            #for n in [0,1,4,6] draws a pattern that vaguely 
                            #resembles a pokeball! cool.
            start = n * (180/7)
            extent = (180/7)
            colorList = ['lemonChiffon','peachPuff','lightGoldenrodYellow',
                    'peachPuff','moccasin','peachPuff','lightYellow']
            if n % 2 == 1:
                canvas.create_arc(cx1-r1, cy1-r1, cx1+r1, cy1+r1, start=start, 
                                extent=extent, fill=colorList[n])    
            else:
                canvas.create_arc(cx1-r1-30, cy1-r1-30, cx1+r1+30, cy1+r1+30, 
                                start=start, extent=extent, fill=colorList[n])
                    #canvas.create_arc(cx1-r1+30, cy1-r1+30, cx1+r1-30, cy1+r1-30,
                                    # start=start, extent=extent,fill=None)
        canvas.create_oval(cx2-r2, cy2-r2, cx2+r2, cy2+r2, fill='white')
        firstTextY = 100
        canvas.create_text(200, firstTextY, text = '[today\'s date]', 
                            font = 'Arial 40 bold', fill = textColor)
        canvas.create_text(500, firstTextY, text = 'time created', 
                            font = 'Arial 30', fill = textColor)
        canvas.create_text(200, firstTextY + 50, text = 'Thoughts', 
                            font = 'Arial 40 underline', fill = textColor)
        canvas.create_text(200, firstTextY + 100, text = 'major events', 
                            font = 'Arial 40 underline', fill = textColor)          
        canvas.create_text(200, firstTextY + 150, text = 'Notes', 
                            font = 'Arial 40 underline', fill = textColor)
        # weekly review generated by an algorithm that
        # analyzes that week's input                                                               
        canvas.create_text(cx1, cy2 - 50, text = 'Review of the week', 
                            font = 'Arial 27 bold', fill = 'black')
        #cited from email from Prof Kosbie about making a button
        cx, cy = app.width/2, app.height/2
        canvas.create_rectangle(cx-100, cy+100, cx+100, cy+120, fill='cyan')
        canvas.create_text(cx, cy+110, text='Click me to go to Month')
        canvas.create_text(cx, cy+100)
    elif app.mode == 'month':
        cx, cy, r = app.width/2, app.height/2, (app.height/2 - 50)
        canvas.create_oval(cx-r, cy-r, cx+r, cy+r, fill='yellow')
    elif app.mode == 'year':
        cx, cy, r = app.width/2, app.height/2, (app.height/2 - 150)
        canvas.create_oval(cx-r, cy-r, cx+r, cy+r, fill='cyan')
    #canvas.create_line(200, app.height, cx-50, cy-50)
    #canvas.create_line(app.width-200, app.height, cx+50, cy+50)
    #canvas.create_rectangle(200, 500, 1200, 1000, fill='white')

    

runApp(width=1400, height=800)


